{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\devan\\\\Desktop\\\\work\\\\national stock exchange\\\\client\\\\src\\\\components\\\\FATCAImageUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Button, Grid, Paper, Typography, Snackbar, TextField } from '@mui/material';\nimport Alert from '@mui/material/Alert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FATCAImageUpload = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    file_name: '',\n    pan_no: '',\n    file_data: ''\n  });\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [snackbar, setSnackbar] = useState({\n    open: false,\n    message: '',\n    severity: 'success'\n  });\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleFileChange = e => {\n    const file = e.target.files[0];\n    if (file) {\n      setSelectedFile(file);\n      setFormData(prev => ({\n        ...prev,\n        file_name: file.name\n      }));\n\n      // Convert file to base64\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        const base64String = reader.result.split(',')[1];\n        setFormData(prev => ({\n          ...prev,\n          file_data: base64String\n        }));\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('/api/fatca-image-upload', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n      const data = await response.json();\n      setSnackbar({\n        open: true,\n        message: data.success ? 'FATCA image uploaded successfully!' : 'Error uploading FATCA image',\n        severity: data.success ? 'success' : 'error'\n      });\n      if (data.success) {\n        setFormData({\n          file_name: '',\n          pan_no: '',\n          file_data: ''\n        });\n        setSelectedFile(null);\n      }\n    } catch (error) {\n      setSnackbar({\n        open: true,\n        message: 'Error uploading FATCA image',\n        severity: 'error'\n      });\n    }\n  };\n  const handleCloseSnackbar = () => {\n    setSnackbar(prev => ({\n      ...prev,\n      open: false\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    style: {\n      padding: 20,\n      margin: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: \"FATCA Image Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            required: true,\n            fullWidth: true,\n            label: \"PAN Number\",\n            name: \"pan_no\",\n            value: formData.pan_no,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            accept: \"image/*\",\n            style: {\n              display: 'none'\n            },\n            id: \"fatca-image-upload\",\n            type: \"file\",\n            onChange: handleFileChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"fatca-image-upload\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              component: \"span\",\n              children: \"Select Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this), selectedFile && /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            style: {\n              marginTop: 10\n            },\n            children: [\"Selected file: \", selectedFile.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            color: \"primary\",\n            disabled: !selectedFile || !formData.pan_no,\n            style: {\n              marginTop: 20\n            },\n            children: \"Upload FATCA Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: snackbar.open,\n      autoHideDuration: 6000,\n      onClose: handleCloseSnackbar,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleCloseSnackbar,\n        severity: snackbar.severity,\n        children: snackbar.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 9\n  }, this);\n};\n_s(FATCAImageUpload, \"IMaILtq4NAUt2zbluLZdNLKzimE=\");\n_c = FATCAImageUpload;\nexport default FATCAImageUpload;\nvar _c;\n$RefreshReg$(_c, \"FATCAImageUpload\");","map":{"version":3,"names":["React","useState","Button","Grid","Paper","Typography","Snackbar","TextField","Alert","jsxDEV","_jsxDEV","FATCAImageUpload","_s","formData","setFormData","file_name","pan_no","file_data","selectedFile","setSelectedFile","snackbar","setSnackbar","open","message","severity","handleChange","e","name","value","target","prev","handleFileChange","file","files","reader","FileReader","onloadend","base64String","result","split","readAsDataURL","handleSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","success","error","handleCloseSnackbar","style","padding","margin","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","container","spacing","item","xs","required","fullWidth","label","onChange","accept","display","id","type","htmlFor","color","component","marginTop","disabled","autoHideDuration","onClose","_c","$RefreshReg$"],"sources":["C:/Users/devan/Desktop/work/national stock exchange/client/src/components/FATCAImageUpload.js"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n    Button,\n    Grid,\n    Paper,\n    Typography,\n    Snackbar,\n    TextField,\n} from '@mui/material';\nimport Alert from '@mui/material/Alert';\n\nconst FATCAImageUpload = () => {\n    const [formData, setFormData] = useState({\n        file_name: '',\n        pan_no: '',\n        file_data: ''\n    });\n\n    const [selectedFile, setSelectedFile] = useState(null);\n    const [snackbar, setSnackbar] = useState({\n        open: false,\n        message: '',\n        severity: 'success'\n    });\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setFormData(prev => ({\n            ...prev,\n            [name]: value\n        }));\n    };\n\n    const handleFileChange = (e) => {\n        const file = e.target.files[0];\n        if (file) {\n            setSelectedFile(file);\n            setFormData(prev => ({\n                ...prev,\n                file_name: file.name\n            }));\n\n            // Convert file to base64\n            const reader = new FileReader();\n            reader.onloadend = () => {\n                const base64String = reader.result.split(',')[1];\n                setFormData(prev => ({\n                    ...prev,\n                    file_data: base64String\n                }));\n            };\n            reader.readAsDataURL(file);\n        }\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        try {\n            const response = await fetch('/api/fatca-image-upload', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(formData),\n            });\n\n            const data = await response.json();\n\n            setSnackbar({\n                open: true,\n                message: data.success ? 'FATCA image uploaded successfully!' : 'Error uploading FATCA image',\n                severity: data.success ? 'success' : 'error'\n            });\n\n            if (data.success) {\n                setFormData({\n                    file_name: '',\n                    pan_no: '',\n                    file_data: ''\n                });\n                setSelectedFile(null);\n            }\n        } catch (error) {\n            setSnackbar({\n                open: true,\n                message: 'Error uploading FATCA image',\n                severity: 'error'\n            });\n        }\n    };\n\n    const handleCloseSnackbar = () => {\n        setSnackbar(prev => ({ ...prev, open: false }));\n    };\n\n    return (\n        <Paper style={{ padding: 20, margin: 20 }}>\n            <Typography variant=\"h6\" gutterBottom>\n                FATCA Image Upload\n            </Typography>\n            <form onSubmit={handleSubmit}>\n                <Grid container spacing={3}>\n                    <Grid item xs={12}>\n                        <TextField\n                            required\n                            fullWidth\n                            label=\"PAN Number\"\n                            name=\"pan_no\"\n                            value={formData.pan_no}\n                            onChange={handleChange}\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <input\n                            accept=\"image/*\"\n                            style={{ display: 'none' }}\n                            id=\"fatca-image-upload\"\n                            type=\"file\"\n                            onChange={handleFileChange}\n                        />\n                        <label htmlFor=\"fatca-image-upload\">\n                            <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                component=\"span\"\n                            >\n                                Select Image\n                            </Button>\n                        </label>\n                        {selectedFile && (\n                            <Typography variant=\"body2\" style={{ marginTop: 10 }}>\n                                Selected file: {selectedFile.name}\n                            </Typography>\n                        )}\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Button\n                            type=\"submit\"\n                            variant=\"contained\"\n                            color=\"primary\"\n                            disabled={!selectedFile || !formData.pan_no}\n                            style={{ marginTop: 20 }}\n                        >\n                            Upload FATCA Image\n                        </Button>\n                    </Grid>\n                </Grid>\n            </form>\n\n            <Snackbar\n                open={snackbar.open}\n                autoHideDuration={6000}\n                onClose={handleCloseSnackbar}\n            >\n                <Alert\n                    onClose={handleCloseSnackbar}\n                    severity={snackbar.severity}\n                >\n                    {snackbar.message}\n                </Alert>\n            </Snackbar>\n        </Paper>\n    );\n};\n\nexport default FATCAImageUpload; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}